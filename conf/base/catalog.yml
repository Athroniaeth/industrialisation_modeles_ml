# Here you can define all your data sets by using simple YAML syntax.

# Documentation for this file format can be found in "The Data Catalog"

# Link: https://docs.kedro.org/en/stable/data/data_catalog.html

raw_daily_data:
  type: pandas.CSVDataSet
  filepath: data/01_raw/examens_tonaux.csv # path to the location of partitions
  layer: raw

shaped_datas:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/merged_data.csv
  layer: intermediate

norm_datas:
  type: pandas.CSVDataSet
  filepath: data/03_primary/norm_data.csv
  layer: intermediate

train_data_x:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/train_data_x.csv
  layer: model_input

train_data_y:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/train_data_y.csv
  layer: model_input

test_data_x:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/test_data_x.csv
  layer: model_input

test_data_y:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/test_data_y.csv
  layer: model_input

train_data_x_2:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/train_data_x_2.csv
  layer: model_input

train_data_y_2:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/train_data_y_2.csv
  layer: model_input

test_data_x_2:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/test_data_x_2.csv
  layer: model_input

test_data_y_2:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/test_data_y_2.csv
  layer: model_input

train_labels:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/train_labels.csv
  layer: model_input

test_data:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/test.csv
  layer: model_input

test_labels:
  type: pandas.CSVDataSet
  filepath: data/05_model_input/test_labels.csv
  layer: model_input

ml_model:
  type: tensorflow.TensorFlowModelDataset #pickle.PickleDataSet
  filepath: data/06_models/20230427_model.h5
  #save_args:
  #overwrite: true